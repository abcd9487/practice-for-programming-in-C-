#include <string.h>
#include <stdio.h>

int ans;
char s[2000];

void checkit(int head, int tail, int len_s)
{
    //printf("head:%d tail:%d ???\n",head,tail);
    if(tail>=len_s)return;
    if(s[head] == s[tail]){
        ans++;
        //printf("head:%d tail:%d ans:%d\n",head,tail,ans);
        if(head-1 >= 0 && tail+1 <= len_s-1){
            //能確保:
            //s[head]=s[tail]
            //so 擴展到 check(head-1,tail+1,len)是OK的!
            checkit(head-1, tail+1, len_s);

        }
        return;
        //printf("head:%d tail:%d ~~~\n",head,tail);
    }
    //printf("NOOO!head:%d tail:%d ans:%d\n",head,tail,ans);
    return;
}


int main(void)
{
    while(~scanf("%s", &s)){
        ans = 0;
        int len_s = strlen(s);
        //雙層for迴圈會TLE
        for(int head = 0;head < len_s-1;head++){
            //checkit(head,len_s-1,len_s);
            checkit(head,head+1,len_s);
            checkit(head,head+2,len_s);

        }

        printf("%d\n", ans);
    }
    return 0;
}

/*
ex a b a c a
len=5
check(0,1,5)->s[0]!=s[1]->return
check(0,2,5)->s[0]=s[2]->ans++->since head<=1->return
head++
check(1,2,5)->s[1]!=s[2]->retuen
check(1,3,5)->s[1]!=s[3]->return
head++
check(2,3,5)->s[2]!s[3]->retuen
check(2,4,5)->s[2]=s[4]->ans++->since 5+1>5-1->return
head++
check(3,4,5)->s[3]!=s[4]->since 4+1>5-1 ->return
check(3,5,5)-->return
head++
check(4,5,5)->return
check(4,6,5)->return
head++
end for loop
ans=2
*/
